From 982ee9e955694e72b7b165774999996171d3a197 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 25 Jul 2016 15:24:15 +1000
Subject: [PATCH] inetcomm: Semi-Implement IMimeMessage GetAddressFormat.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/inetcomm/mimeole.c       |  65 ++++++++++-------
 dlls/inetcomm/tests/mimeole.c | 128 +++++-----------------------------
 2 files changed, 56 insertions(+), 137 deletions(-)

diff --git a/dlls/inetcomm/mimeole.c b/dlls/inetcomm/mimeole.c
index a267b7afe83..3e3a1f721ef 100644
--- a/dlls/inetcomm/mimeole.c
+++ b/dlls/inetcomm/mimeole.c
@@ -491,23 +491,6 @@ static inline WCHAR *heap_strdupAtoW(const char *str)
     return ret;
 }
 
-static inline WCHAR *heap_strdupAtoW(const char *str)
-{
-    WCHAR *ret = NULL;
-
-    if(str)
-    {
-        DWORD len;
-
-        len = MultiByteToWideChar(CP_ACP, 0, str, -1, NULL, 0);
-        ret = HeapAlloc(GetProcessHeap(), 0, len*sizeof(WCHAR));
-        if(ret)
-            MultiByteToWideChar(CP_ACP, 0, str, -1, ret, len);
-    }
-
-    return ret;
-}
-
 #define PARSER_BUF_SIZE 1024
 
 /*****************************************************
@@ -3003,13 +2986,45 @@ static HRESULT WINAPI MimeMessage_GetAddressTypes(
 }
 
 static HRESULT WINAPI MimeMessage_GetAddressFormat(
-    IMimeMessage *iface,
-    DWORD dwAdrTypes,
-    ADDRESSFORMAT format,
-    LPSTR *ppszFormat)
-{
-    FIXME("(%p)->(%ld, %d, %p)\n", iface, dwAdrTypes, format, ppszFormat);
-    return E_NOTIMPL;
+     IMimeMessage *iface,
+     DWORD addr_type,
+     ADDRESSFORMAT format,
+     LPSTR *value)
+ {
+    PROPVARIANT prop;
+    HRESULT hr = MIME_E_NOT_FOUND;
+
+    TRACE("(%p)->(%ld, %d, %p) semi-stub.\n", iface, addr_type, format, value);
+
+    PropVariantInit(&prop);
+
+    prop.vt = VT_LPSTR;
+    switch(addr_type)
+    {
+        case IAT_FROM:
+            hr = MimeMessage_GetBodyProp(iface, HBODY_ROOT, "From", 0, &prop);
+            break;
+        case IAT_TO:
+            hr = MimeMessage_GetBodyProp(iface, HBODY_ROOT, "To", 0, &prop);
+            break;
+        case IAT_CC:
+            hr = MimeMessage_GetBodyProp(iface, HBODY_ROOT, "Cc", 0, &prop);
+            break;
+        default:
+            FIXME("Unknown address type %ld\n", addr_type);
+    }
+
+    if(SUCCEEDED(hr))
+    {
+        *value = CoTaskMemAlloc(strlen(prop.pszVal)+1 );
+        if(*value)
+            strcpy(*value, prop.pszVal);
+        else
+            hr = E_OUTOFMEMORY;
+    }
+    PropVariantClear(&prop);
+
+    return hr;
 }
 
 static HRESULT WINAPI MimeMessage_EnumAddressTypes(
@@ -3680,7 +3695,7 @@ HRESULT WINAPI MimeGetAddressFormatW(REFIID riid, void *object, DWORD addr_type,
 {
     HRESULT hr;
 
-    TRACE("(%s, %p, %d, %d, %p)\n", debugstr_guid(riid), object, addr_type, addr_format, address);
+    TRACE("(%s, %p, %ld, %d, %p)\n", debugstr_guid(riid), object, addr_type, addr_format, address);
 
     if(!object || !address)
         return E_INVALIDARG;
diff --git a/dlls/inetcomm/tests/mimeole.c b/dlls/inetcomm/tests/mimeole.c
index 28d4ce2348c..cfa5dd8a672 100644
--- a/dlls/inetcomm/tests/mimeole.c
+++ b/dlls/inetcomm/tests/mimeole.c
@@ -1653,164 +1653,68 @@ static void test_MimeGetAddressFormatW(void)
     WCHAR *address;
 
     hr = MimeOleCreateMessage(NULL, &msg);
-    ok(hr == S_OK, "ret %08x\n", hr);
-
-    hr = CoCreateInstance(&CLSID_IMimeBody, NULL, CLSCTX_INPROC_SERVER, &IID_IMimeBody, (void**)&body);
-    ok(hr == S_OK, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IUnknown, msg, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IDispatch, msg, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeBody, body, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IDispatch, NULL, IAT_FROM, 3, &address);
-    ok(hr == E_INVALIDARG, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, 3, NULL);
-    ok(hr == E_INVALIDARG, "ret %08x\n", hr);
-
-    hr = CreateStreamOnHGlobal(NULL, TRUE, &in);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    IStream_Write(in, msg1, sizeof(msg1) - 1, NULL);
-    off.QuadPart = 0;
-    IStream_Seek(in, off, STREAM_SEEK_SET, NULL);
-
-    hr = IMimeMessage_Load(msg, in);
-    ok(hr == S_OK, "ret %08x\n", hr);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_FRIENDLY, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result1, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_EMAIL, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result2, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_BOTH, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result3, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_DECODED, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result4, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_ENCODED, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result4, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_TRANSMIT, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result5, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    /* default to AFT_DISPLAY_BOTH */
-    hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, 6, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
-    ok(!lstrcmpW(result3, address), "got %s\n", wine_dbgstr_w(address));
-    CoTaskMemFree(address);
-
-    IStream_Release(in);
-    IMimeBody_Release(body);
-    IMimeMessage_Release(msg);
-}
-
-static void test_MimeGetAddressFormatW(void)
-{
-    static WCHAR result1[] = {'H','u','w',' ','D','a','v','i','e','s',';',' ','M','e',0};
-    static WCHAR result2[] = {'<','h','u','w','@','c','o','d','e','w','e','a','v','e','r','s','.','c',
-                              'o','m','>',';',' ','<','x','x','x','@','c','o','d','e','w','e','a','v',
-                              'e','r','s','.','c','o','m','>',0};
-    static WCHAR result3[] = {'\"','H','u','w',' ','D','a','v','i','e','s','\"',' ','<','h','u','w',
-                              '@','c','o','d','e','w','e','a','v','e','r','s','.','c','o','m','>',';',
-                              ' ','\"','M','e','\"',' ','<','x','x','x','@','c','o','d','e','w','e','a',
-                              'v','e','r','s','.','c','o','m','>',0};
-    static WCHAR result4[] = {'\"','H','u','w',' ','D','a','v','i','e','s','\"',' ','<','h','u','w',
-                              '@','c','o','d','e','w','e','a','v','e','r','s','.','c','o','m','>',',',
-                              ' ','\"','M','e','\"',' ','<','x','x','x','@','c','o','d','e','w','e','a',
-                              'v','e','r','s','.','c','o','m','>',0};
-    static WCHAR result5[] = {'\"','H','u','w',' ','D','a','v','i','e','s','\"',' ','<','h','u','w',
-                              '@','c','o','d','e','w','e','a','v','e','r','s','.','c','o','m','>',',','\r',
-                              '\n','\t','\"','M','e','\"',' ','<','x','x','x','@','c','o','d','e','w',
-                              'e','a','v','e','r','s','.','c','o','m','>',0};
-    HRESULT hr;
-    IMimeMessage *msg;
-    IMimeBody *body;
-    IStream *in;
-    LARGE_INTEGER off;
-    WCHAR *address;
-
-    hr = MimeOleCreateMessage(NULL, &msg);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
 
     hr = CoCreateInstance(&CLSID_IMimeBody, NULL, CLSCTX_INPROC_SERVER, &IID_IMimeBody, (void**)&body);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IUnknown, msg, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
+    ok(hr == E_NOINTERFACE, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IDispatch, msg, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
+    ok(hr == E_NOINTERFACE, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IMimeBody, body, IAT_FROM, 3, &address);
-    ok(hr == E_NOINTERFACE, "ret %08x\n", hr);
+    ok(hr == E_NOINTERFACE, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IDispatch, NULL, IAT_FROM, 3, &address);
-    ok(hr == E_INVALIDARG, "ret %08x\n", hr);
+    ok(hr == E_INVALIDARG, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, 3, NULL);
-    ok(hr == E_INVALIDARG, "ret %08x\n", hr);
+    ok(hr == E_INVALIDARG, "ret %08lx\n", hr);
 
     hr = CreateStreamOnHGlobal(NULL, TRUE, &in);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     IStream_Write(in, msg1, sizeof(msg1) - 1, NULL);
     off.QuadPart = 0;
     IStream_Seek(in, off, STREAM_SEEK_SET, NULL);
 
     hr = IMimeMessage_Load(msg, in);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_FRIENDLY, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result1, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_EMAIL, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result2, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_DISPLAY_BOTH, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result3, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_DECODED, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result4, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_ENCODED, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result4, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, AFT_RFC822_TRANSMIT, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result5, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
     /* default to AFT_DISPLAY_BOTH */
     hr = MimeGetAddressFormatW(&IID_IMimeMessage, msg, IAT_FROM, 6, &address);
-    ok(hr == S_OK, "ret %08x\n", hr);
+    ok(hr == S_OK, "ret %08lx\n", hr);
     ok(!lstrcmpW(result3, address), "got %s\n", wine_dbgstr_w(address));
     CoTaskMemFree(address);
 
-- 
2.45.2

