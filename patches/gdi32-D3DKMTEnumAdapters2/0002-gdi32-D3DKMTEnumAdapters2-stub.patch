From e0da3ff7599a815080ca75c79465997da0820f30 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 5 Jan 2023 17:37:29 +1100
Subject: [PATCH] gdi32: D3DKMTEnumAdapters2 stub

---
 dlls/gdi32/gdi32.spec   |  1 +
 dlls/win32u/driver.c    | 47 +++++++++++++++++++++++++++++++++++++++++
 dlls/win32u/syscall.c   |  1 +
 dlls/win32u/win32u.spec |  2 +-
 include/ddk/d3dkmthk.h  |  1 +
 include/ntgdi.h         |  1 +
 6 files changed, 52 insertions(+), 1 deletion(-)

diff --git a/dlls/gdi32/gdi32.spec b/dlls/gdi32/gdi32.spec
index d6a0ad90e1e..363c424aafc 100644
--- a/dlls/gdi32/gdi32.spec
+++ b/dlls/gdi32/gdi32.spec
@@ -79,6 +79,7 @@
 @ stdcall D3DKMTCreateDevice(ptr) win32u.NtGdiDdDDICreateDevice
 @ stdcall D3DKMTDestroyDCFromMemory(ptr) win32u.NtGdiDdDDIDestroyDCFromMemory
 @ stdcall D3DKMTDestroyDevice(ptr) win32u.NtGdiDdDDIDestroyDevice
+@ stdcall D3DKMTEnumAdapters2(ptr) win32u.NtGdiDdDDIEnumAdapters2
 @ stdcall D3DKMTEscape(ptr) win32u.NtGdiDdDDIEscape
 @ stdcall D3DKMTOpenAdapterFromDeviceName(ptr) win32u.NtGdiDdDDIOpenAdapterFromDeviceName
 @ stdcall D3DKMTOpenAdapterFromGdiDisplayName(ptr)
diff --git a/dlls/win32u/driver.c b/dlls/win32u/driver.c
index d46359401b9..90cad54967f 100644
--- a/dlls/win32u/driver.c
+++ b/dlls/win32u/driver.c
@@ -1580,3 +1580,50 @@ NTSTATUS WINAPI NtGdiDdDDICheckVidPnExclusiveOwnership( const D3DKMT_CHECKVIDPNE
 
     return get_display_driver()->pD3DKMTCheckVidPnExclusiveOwnership( desc );
 }
+
+/***********************************************************************
+ *           D3DKMTEnumAdapters2    (win32u.@)
+ */
+NTSTATUS WINAPI NtGdiDdDDIEnumAdapters2(D3DKMT_ENUMADAPTERS2 *adapters)
+{
+    struct d3dkmt_adapter *adapter;
+    NTSTATUS status = STATUS_NO_MEMORY;
+
+    FIXME("%p\n", adapters);
+
+    if (!adapters)
+        return STATUS_INVALID_PARAMETER;
+
+    pthread_mutex_lock( &driver_lock );
+    if(!adapters->NumAdapters)
+    {
+        adapters->NumAdapters = list_count(&d3dkmt_adapters);
+        FIXME("adapters->NumAdapters %d\n", adapters->NumAdapters);
+    }
+    else
+    {
+        int i = 0;
+        D3DKMT_OPENADAPTERFROMLUID desc;
+
+        LIST_FOR_EACH_ENTRY( adapter, &d3dkmt_adapters, struct d3dkmt_adapter, entry )
+        {
+            adapters->pAdapters[i].hAdapter = adapter->handle;
+
+            if (get_display_driver()->pD3DKMTOpenAdapterFromLuid)
+            {
+                get_display_driver()->pD3DKMTOpenAdapterFromLuid( &desc );
+                adapters->pAdapters[i].AdapterLuid = desc.AdapterLuid;
+            }
+            adapters->pAdapters[i].NumOfSources = 1;
+            adapters->pAdapters[i].bPrecisePresentRegionsPreferred = FALSE;
+
+            i++;
+        }
+
+        status = STATUS_SUCCESS;
+    }
+
+    pthread_mutex_unlock( &driver_lock );
+
+    return status;
+}
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 32812a3d881..8663eb079c0 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -53,6 +53,7 @@ static void * const syscalls[] =
     NtGdiCreateRoundRectRgn,
     NtGdiCreateSolidBrush,
     NtGdiDdDDICreateDevice,
+    NtGdiDdDDIEnumAdapters2,
     NtGdiDdDDIOpenAdapterFromHdc,
     NtGdiDdDDIQueryStatistics,
     NtGdiDdDDISetQueuedLimit,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index c3ed3c0559a..69e97c0d511 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -223,7 +223,7 @@
 @ stub NtGdiDdDDIDispMgrSourceOperation
 @ stub NtGdiDdDDIDispMgrTargetOperation
 @ stub NtGdiDdDDIEnumAdapters
-@ stub NtGdiDdDDIEnumAdapters2
+@ stdcall -syscall NtGdiDdDDIEnumAdapters2(ptr)
 @ stdcall NtGdiDdDDIEscape(ptr)
 @ stub NtGdiDdDDIEvict
 @ stub NtGdiDdDDIExtractBundleObject
diff --git a/include/ddk/d3dkmthk.h b/include/ddk/d3dkmthk.h
index 69239a45fd9..a69d44d6d46 100644
--- a/include/ddk/d3dkmthk.h
+++ b/include/ddk/d3dkmthk.h
@@ -692,6 +692,7 @@ NTSTATUS WINAPI D3DKMTCreateDevice(D3DKMT_CREATEDEVICE *desc);
 NTSTATUS WINAPI D3DKMTCreateDCFromMemory(D3DKMT_CREATEDCFROMMEMORY *desc);
 NTSTATUS WINAPI D3DKMTDestroyDCFromMemory(const D3DKMT_DESTROYDCFROMMEMORY *desc);
 NTSTATUS WINAPI D3DKMTDestroyDevice(const D3DKMT_DESTROYDEVICE *desc);
+NTSTATUS WINAPI D3DKMTEnumAdapters2( const D3DKMT_ENUMADAPTERS2 *adapters);
 NTSTATUS WINAPI D3DKMTEscape( const D3DKMT_ESCAPE *desc );
 NTSTATUS WINAPI D3DKMTOpenAdapterFromGdiDisplayName(D3DKMT_OPENADAPTERFROMGDIDISPLAYNAME *desc);
 NTSTATUS WINAPI D3DKMTOpenAdapterFromHdc( D3DKMT_OPENADAPTERFROMHDC *desc );
diff --git a/include/ntgdi.h b/include/ntgdi.h
index 1aa5cad468f..4335caddd37 100644
--- a/include/ntgdi.h
+++ b/include/ntgdi.h
@@ -472,6 +472,7 @@ NTSTATUS WINAPI NtGdiDdDDICreateDCFromMemory( D3DKMT_CREATEDCFROMMEMORY *desc );
 NTSTATUS WINAPI NtGdiDdDDICreateDevice( D3DKMT_CREATEDEVICE *desc );
 NTSTATUS WINAPI NtGdiDdDDIDestroyDCFromMemory( const D3DKMT_DESTROYDCFROMMEMORY *desc );
 NTSTATUS WINAPI NtGdiDdDDIDestroyDevice( const D3DKMT_DESTROYDEVICE *desc );
+NTSTATUS WINAPI NtGdiDdDDIEnumAdapters2(D3DKMT_ENUMADAPTERS2 *adapters);
 NTSTATUS WINAPI NtGdiDdDDIEscape( const D3DKMT_ESCAPE *desc );
 NTSTATUS WINAPI NtGdiDdDDIOpenAdapterFromHdc( D3DKMT_OPENADAPTERFROMHDC *desc );
 NTSTATUS WINAPI NtGdiDdDDIOpenAdapterFromDeviceName( D3DKMT_OPENADAPTERFROMDEVICENAME *desc );
-- 
2.39.0

