From 53ebfabf43cb14f71d740d7a8916431b522e38b3 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 14 Jun 2024 16:31:02 +1000
Subject: [PATCH] odbccp32: Implement Drivers Tab

TODO: Rest of the columns.
---
 dlls/odbccp32/odbccp32.c  | 128 ++++++++++++++++++++++++++++++++++++--
 dlls/odbccp32/odbccp32.rc |   8 ++-
 dlls/odbccp32/resource.h  |   5 ++
 3 files changed, 136 insertions(+), 5 deletions(-)

diff --git a/dlls/odbccp32/odbccp32.c b/dlls/odbccp32/odbccp32.c
index baae7d56329..6967eae6507 100644
--- a/dlls/odbccp32/odbccp32.c
+++ b/dlls/odbccp32/odbccp32.c
@@ -174,6 +174,123 @@ static INT_PTR CALLBACK system_dsn_dlg_proc(HWND hwnd, UINT msg, WPARAM wp, LPAR
     return 0;
 }
 
+static void create_drivers_columns(HWND lv)
+{
+    WCHAR buf[256];
+    LVCOLUMNW column;
+
+    LoadStringW(instance, IDS_DRIVER_COL_NAME, buf, ARRAY_SIZE(buf));
+    column.mask = LVCF_WIDTH | LVCF_TEXT;
+    column.cx = 200;
+    column.pszText = buf;
+    SendMessageW(lv, LVM_INSERTCOLUMNW, 0, (LPARAM)&column);
+
+    LoadStringW(instance, IDS_DRIVER_COL_VERSION, buf, ARRAY_SIZE(buf));
+    column.mask = LVCF_WIDTH | LVCF_TEXT;
+    column.cx = 100;
+    column.pszText = buf;
+    SendMessageW(lv, LVM_INSERTCOLUMNW, 1, (LPARAM)&column);
+
+    LoadStringW(instance, IDS_DRIVER_COL_COMPANY, buf, ARRAY_SIZE(buf));
+    column.mask = LVCF_WIDTH | LVCF_TEXT;
+    column.cx = 100;
+    column.pszText = buf;
+    SendMessageW(lv, LVM_INSERTCOLUMNW, 2, (LPARAM)&column);
+
+    LoadStringW(instance, IDS_DRIVER_COL_FILE, buf, ARRAY_SIZE(buf));
+    column.mask = LVCF_WIDTH | LVCF_TEXT;
+    column.cx = 100;
+    column.pszText = buf;
+    SendMessageW(lv, LVM_INSERTCOLUMNW, 3, (LPARAM)&column);
+
+    LoadStringW(instance, IDS_DRIVER_COL_DATE, buf, ARRAY_SIZE(buf));
+    column.mask = LVCF_WIDTH | LVCF_TEXT;
+    column.cx = 50;
+    column.pszText = buf;
+    SendMessageW(lv, LVM_INSERTCOLUMNW, 4, (LPARAM)&column);
+}
+
+static void create_driver_list(HWND listview)
+{
+    DWORD index = 0;
+    DWORD valuelen;
+    WCHAR *value;
+    HKEY drivers;
+    DWORD len;
+    LONG res;
+
+    res = RegOpenKeyExW(HKEY_LOCAL_MACHINE, drivers_key, 0, KEY_QUERY_VALUE, &drivers);
+    if (res)
+    {
+        ERR("No registry entry found\n");
+        return;
+    }
+
+    valuelen = 256;
+    value = malloc(valuelen * sizeof(WCHAR));
+
+    while (1)
+    {
+        len = valuelen;
+        res = RegEnumValueW(drivers, index, value, &len, NULL, NULL, NULL, NULL);
+        while (res == ERROR_MORE_DATA)
+        {
+            value = realloc(value, ++len * sizeof(WCHAR));
+            res = RegEnumValueW(drivers, index, value, &len, NULL, NULL, NULL, NULL);
+        }
+        if (res == ERROR_SUCCESS)
+        {
+            LVITEMW item;
+
+            item.mask = LVIF_TEXT;
+            item.iItem = SendMessageW(listview, LVM_GETITEMCOUNT, 0, 0);
+            item.iSubItem = 0;
+            item.pszText = value;
+
+            SendMessageW(listview, LVM_INSERTITEMW, 0, (LPARAM)&item);
+            {
+                LONG res2;
+                HKEY driver;
+                WCHAR driverPath[256];
+                WCHAR buffer[MAX_PATH];
+                DWORD size;
+
+                wcscpy(driverPath, odbcini);
+                wcscat(driverPath, value);
+
+                res2 =  RegOpenKeyExW(HKEY_LOCAL_MACHINE, driverPath, 0, KEY_QUERY_VALUE, &driver);
+                if (res2)
+                    continue;
+
+                size = ARRAY_SIZE(buffer);
+                res2 = RegGetValueW(driver, NULL, L"Driver", RRF_RT_REG_SZ, NULL, buffer, &size);
+                if (res2)
+                    continue;
+
+                item.mask = LVIF_TEXT | LVCF_SUBITEM;
+                item.iSubItem = 3;
+                item.pszText = buffer;
+
+                SendMessageW(listview, LVM_SETITEMW, 0, (LPARAM)&item);
+
+
+                RegCloseKey(driver);
+            }
+        }
+        else if (res == ERROR_NO_MORE_ITEMS)
+            break;
+        else
+        {
+            push_error(ODBC_ERROR_GENERAL_ERR, odbc_error_general_err);
+            break;
+        }
+        index++;
+    }
+
+    free(value);
+    RegCloseKey(drivers);
+}
+
 static INT_PTR CALLBACK drivers_dlg_proc(HWND hwnd, UINT msg, WPARAM wp, LPARAM lp)
 {
     TRACE("(%p, %08x, %08Ix, %08Ix)\n", hwnd, msg, wp, lp);
@@ -182,22 +299,25 @@ static INT_PTR CALLBACK drivers_dlg_proc(HWND hwnd, UINT msg, WPARAM wp, LPARAM
     {
         case WM_INITDIALOG:
         {
-            TRACE("WM_INITDIALOG");
+            HWND lv = GetDlgItem(hwnd, IDC_DRIVER_LIST);
+
+            create_drivers_columns(lv);
+            create_driver_list(lv);
             break;
         }
         case WM_DESTROY:
         {
-            TRACE("WM_DESTROY");
+            //TRACE("WM_DESTROY");
             break;
         }
         case WM_NOTIFY:
         {
-            TRACE("WM_NOTIFY");
+            //TRACE("WM_NOTIFY");
             break;
         }
         case WM_COMMAND:
         {
-            TRACE("WM_COMMAND");
+            //TRACE("WM_COMMAND");
             break;
         }
         default:
diff --git a/dlls/odbccp32/odbccp32.rc b/dlls/odbccp32/odbccp32.rc
index 635694b7f8c..3a72c086000 100644
--- a/dlls/odbccp32/odbccp32.rc
+++ b/dlls/odbccp32/odbccp32.rc
@@ -33,6 +33,12 @@ LANGUAGE LANG_ENGLISH, SUBLANG_DEFAULT
 STRINGTABLE
 {
     IDS_USER_SRC_TITLE "ODBC Data Source Administrator"
+
+    IDS_DRIVER_COL_NAME "Name"
+    IDS_DRIVER_COL_VERSION "Version"
+    IDS_DRIVER_COL_COMPANY "Company"
+    IDS_DRIVER_COL_FILE "File"
+    IDS_DRIVER_COL_DATE "Date"
 }
 
 IDD_USER_SOURCES DIALOGEX 0, 0, 381, 197
@@ -69,7 +75,7 @@ CAPTION "Drivers"
 FONT 8, "MS Shell Dlg", 0, 0, 0x0
 BEGIN
     LTEXT           "&ODBC Drivers that are installed on your system:",-1, 7, 7, 367, 8
-    CONTROL         "List1", IDC_DRIVER_LIST, "SysListView32",LVS_SINGLESEL | WS_BORDER | WS_TABSTOP, 7, 18, 367, 120
+    CONTROL         "List1", IDC_DRIVER_LIST, "SysListView32", LVS_REPORT | LVS_SINGLESEL | LVS_SHOWSELALWAYS | LVS_SORTASCENDING | LVS_NOSORTHEADER | WS_BORDER | WS_TABSTOP, 7, 18, 367, 120
     GROUPBOX        "", -1, 7, 140, 367, 50
     LTEXT           "An ODBC driver allows ODBC-enabled programs to get information from ODBC data sources.  To install new drivers, use the driver's setup program.", -1, 12, 152, 353, 34
 END
diff --git a/dlls/odbccp32/resource.h b/dlls/odbccp32/resource.h
index b26a38dcaa7..482acdff3cd 100644
--- a/dlls/odbccp32/resource.h
+++ b/dlls/odbccp32/resource.h
@@ -27,3 +27,8 @@
 #define IDC_DRIVER_LIST       1004
 
 #define IDS_USER_SRC_TITLE   10000
+#define IDS_DRIVER_COL_NAME    10001
+#define IDS_DRIVER_COL_VERSION 10002
+#define IDS_DRIVER_COL_COMPANY 10003
+#define IDS_DRIVER_COL_FILE    10004
+#define IDS_DRIVER_COL_DATE    10005
-- 
2.43.0

