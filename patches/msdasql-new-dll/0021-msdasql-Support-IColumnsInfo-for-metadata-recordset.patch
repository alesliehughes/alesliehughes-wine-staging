From ec3a5d194b6d6a63df5d775f9eeffd955d5ca3f9 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 24 Nov 2023 08:31:20 +1100
Subject: msdasql: Support IColumnsInfo for metadata rowset


diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 12941ee790d..71c6abd2d27 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -1416,6 +1416,7 @@ static HRESULT WINAPI column_rs_GetAvailableColumns(IColumnsRowset *iface, DBORD
 struct metadata_rowset
 {
     IRowset IRowset_iface;
+    IColumnsInfo IColumnsInfo_iface;
     LONG refs;
 
     DBORDINAL dbid_cnt;
@@ -1427,6 +1428,11 @@ static inline struct metadata_rowset *meta_impl_from_IRowset( IRowset *iface )
     return CONTAINING_RECORD( iface, struct metadata_rowset, IRowset_iface );
 }
 
+static inline struct metadata_rowset *meta_impl_from_IColumnsInfo( IColumnsInfo *iface )
+{
+    return CONTAINING_RECORD( iface, struct metadata_rowset, IColumnsInfo_iface );
+}
+
 static HRESULT WINAPI metadata_rowset_QueryInterface(IRowset *iface, REFIID riid,  void **ppv)
 {
     struct metadata_rowset *rowset = meta_impl_from_IRowset( iface );
@@ -1439,6 +1445,10 @@ static HRESULT WINAPI metadata_rowset_QueryInterface(IRowset *iface, REFIID riid
     {
         *ppv = &rowset->IRowset_iface;
     }
+    else if(IsEqualGUID(&IID_IColumnsInfo, riid))
+    {
+        *ppv = &rowset->IColumnsInfo_iface;
+    }
 
     if(*ppv)
     {
@@ -1527,6 +1537,54 @@ static const struct IRowsetVtbl metadata_rowset_vtbl =
     metadata_rowset_RestartPosition
 };
 
+static HRESULT WINAPI meta_colsinfo_QueryInterface(IColumnsInfo *iface, REFIID riid, void **out)
+{
+    struct metadata_rowset *rowset = meta_impl_from_IColumnsInfo( iface );
+    return IRowset_QueryInterface(&rowset->IRowset_iface, riid, out);
+}
+
+static ULONG WINAPI meta_colsinfo_AddRef(IColumnsInfo *iface)
+{
+    struct metadata_rowset *rowset = meta_impl_from_IColumnsInfo( iface );
+    return IRowset_AddRef(&rowset->IRowset_iface);
+}
+
+static ULONG  WINAPI meta_colsinfo_Release(IColumnsInfo *iface)
+{
+    struct metadata_rowset *rowset = meta_impl_from_IColumnsInfo( iface );
+    return IRowset_Release(&rowset->IRowset_iface);
+}
+
+static HRESULT WINAPI meta_colsinfo_GetColumnInfo(IColumnsInfo *iface, DBORDINAL *columns,
+        DBCOLUMNINFO **colinfo, OLECHAR **stringsbuffer)
+{
+    struct metadata_rowset *rowset = meta_impl_from_IColumnsInfo( iface );
+
+    FIXME("%p, %p, %p, %p\n", rowset, columns, colinfo, stringsbuffer);
+
+    if (!columns || !colinfo || !stringsbuffer)
+        return E_INVALIDARG;
+
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI meta_colsinfo_MapColumnIDs(IColumnsInfo *iface, DBORDINAL column_ids,
+        const DBID *dbids, DBORDINAL *columns)
+{
+    struct metadata_rowset *rowset = meta_impl_from_IColumnsInfo( iface );
+    FIXME("%p, %Id, %p, %p\n", rowset, column_ids, dbids, columns);
+    return E_NOTIMPL;
+}
+
+static struct IColumnsInfoVtbl meta_columninfo_vtbll =
+{
+    meta_colsinfo_QueryInterface,
+    meta_colsinfo_AddRef,
+    meta_colsinfo_Release,
+    meta_colsinfo_GetColumnInfo,
+    meta_colsinfo_MapColumnIDs
+};
+
 static HRESULT WINAPI column_rs_GetColumnsRowset(IColumnsRowset *iface, IUnknown *outer, DBORDINAL count,
         const DBID columns[], REFIID riid, ULONG property_cnt, DBPROPSET property_sets[], IUnknown **unk_rs)
 {
@@ -1554,6 +1612,7 @@ static HRESULT WINAPI column_rs_GetColumnsRowset(IColumnsRowset *iface, IUnknown
         return E_OUTOFMEMORY;
 
     metadata_rs->IRowset_iface.lpVtbl = &metadata_rowset_vtbl;
+    metadata_rs->IColumnsInfo_iface.lpVtbl = &meta_columninfo_vtbll;
     metadata_rs->refs = 1;
     metadata_rs->dbid_cnt = count;
     if (count)
