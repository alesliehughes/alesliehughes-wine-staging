From c131cae56cb152e8c9079781c7d9b6f667febdae Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 13 Jun 2022 17:21:45 +1000
Subject: [PATCH] d3drm: AddVertext creates a Coordinates list

---
 dlls/d3drm/d3drm_private.h |  2 +-
 dlls/d3drm/meshbuilder.c   |  6 ++++-
 dlls/d3drm/tests/d3drm.c   | 48 ++++++++++++++++++++++++++++++++++++++
 3 files changed, 54 insertions(+), 2 deletions(-)

diff --git a/dlls/d3drm/d3drm_private.h b/dlls/d3drm/d3drm_private.h
index 296a9730954..799eb5fbb57 100644
--- a/dlls/d3drm/d3drm_private.h
+++ b/dlls/d3drm/d3drm_private.h
@@ -163,7 +163,7 @@ struct d3drm_mesh_builder
     DWORD nb_faces;
     DWORD face_data_size;
     void *pFaceData;
-    DWORD nb_coords2d;
+    SIZE_T nb_coords2d;
     struct coords_2d *pCoords2d;
     D3DCOLOR color;
     IDirect3DRMMaterial2 *material;
diff --git a/dlls/d3drm/meshbuilder.c b/dlls/d3drm/meshbuilder.c
index c039a8ed88e..e20b10aefc3 100644
--- a/dlls/d3drm/meshbuilder.c
+++ b/dlls/d3drm/meshbuilder.c
@@ -1232,7 +1232,7 @@ HRESULT load_mesh_data(IDirect3DRMMeshBuilder3 *iface, IDirectXFileData *pData,
 
             mesh_builder->nb_coords2d = *(DWORD*)ptr;
 
-            TRACE("MeshTextureCoords: nb_coords2d = %ld\n", mesh_builder->nb_coords2d);
+            TRACE("MeshTextureCoords: nb_coords2d = %Iu\n", mesh_builder->nb_coords2d);
 
             mesh_builder->pCoords2d = calloc(mesh_builder->nb_coords2d, sizeof(*mesh_builder->pCoords2d));
             memcpy(mesh_builder->pCoords2d, ptr + sizeof(DWORD), mesh_builder->nb_coords2d * sizeof(*mesh_builder->pCoords2d));
@@ -1949,6 +1949,10 @@ static int WINAPI d3drm_mesh_builder3_AddVertex(IDirect3DRMMeshBuilder3 *iface,
     mesh_builder->vertices[mesh_builder->nb_vertices].u2.y = y;
     mesh_builder->vertices[mesh_builder->nb_vertices].u3.z = z;
 
+    if (!d3drm_array_reserve((void **)&mesh_builder->pCoords2d, &mesh_builder->nb_coords2d,
+            mesh_builder->nb_coords2d + 1, sizeof(*mesh_builder->pCoords2d)))
+        return 0;
+
     return mesh_builder->nb_vertices++;
 }
 
diff --git a/dlls/d3drm/tests/d3drm.c b/dlls/d3drm/tests/d3drm.c
index 3a9db9214ff..b0b979d3c67 100644
--- a/dlls/d3drm/tests/d3drm.c
+++ b/dlls/d3drm/tests/d3drm.c
@@ -854,6 +854,53 @@ static void test_Mesh(void)
     IDirect3DRM_Release(d3drm);
 }
 
+static void test_Mesh_Vertices(void)
+{
+    HRESULT hr;
+    IDirect3DRM *d3drm;
+    IDirect3DRM2 *d3drm2;
+    IDirect3DRMMesh *mesh;
+    IDirect3DRMMeshBuilder2 *builder;
+    D3DVALUE u, v;
+    int idx;
+
+    hr = Direct3DRMCreate(&d3drm);
+    ok(hr == D3DRM_OK, "Cannot get IDirect3DRM interface, hr %#lx\n", hr);
+
+    if (FAILED(hr = IDirect3DRM_QueryInterface(d3drm, &IID_IDirect3DRM2, (void **)&d3drm2)))
+    {
+        win_skip("Cannot get IDirect3DRM2 interface, hr %#lx, skipping tests\n", hr);
+        IDirect3DRM_Release(d3drm);
+        return;
+    }
+
+    hr = IDirect3DRM_CreateMesh(d3drm, &mesh);
+    ok(hr == D3DRM_OK, "Cannot get IDirect3DRMMesh interface, hr %#lx\n", hr);
+
+    hr = IDirect3DRM2_CreateMeshBuilder(d3drm2, &builder);
+    ok(hr == S_OK, "got hr %#lx\n", hr);
+
+    idx = IDirect3DRMMeshBuilder_AddVertex(builder, -2.95f, 0.0f, 2.95f);
+    ok(idx == 0, "got hr %d\n", idx);
+
+    hr = IDirect3DRMMeshBuilder_SetTextureCoordinates(builder, 0, 0.0f, 0.0f);
+    ok(hr == S_OK, "got hr %#lx\n", hr);
+
+    idx = IDirect3DRMMeshBuilder_AddVertex(builder, -2.95f, 0.0f, 2.95f);
+    ok(idx == 1, "got hr %d\n", idx);
+
+    hr = IDirect3DRMMeshBuilder_GetTextureCoordinates(builder, idx, &u, &v);
+    ok(hr == S_OK, "got hr %#lx\n", hr);
+    ok(u == 0.0f, "got hr %.8e\n", u);
+    ok(v == 0.0f, "got hr %.8e\n", v);
+
+    IDirect3DRMMeshBuilder_Release(builder);
+    IDirect3DRMMesh_Release(mesh);
+
+    IDirect3DRM2_Release(d3drm2);
+    IDirect3DRM_Release(d3drm);
+}
+
 static void test_Face(void)
 {
     HRESULT hr;
@@ -8208,6 +8255,7 @@ START_TEST(d3drm)
     test_MeshBuilder();
     test_MeshBuilder3();
     test_Mesh();
+    test_Mesh_Vertices();
     test_Face();
     test_Frame();
     test_Device();
-- 
2.38.1

