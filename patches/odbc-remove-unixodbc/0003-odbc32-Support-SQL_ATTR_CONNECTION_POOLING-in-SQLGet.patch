From e2502057a07a9105575eee7061a67edd52195d0c Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 3 Feb 2023 13:41:20 +1100
Subject: [PATCH 3/8] odbc32: Support SQL_ATTR_CONNECTION_POOLING in
 SQLGetEnvAttr/SQLSetEnvAttr

---
 dlls/odbc32/proxyodbc.c | 63 +++++++++++++++++++++++++++++++++++++----
 1 file changed, 57 insertions(+), 6 deletions(-)

diff --git a/dlls/odbc32/proxyodbc.c b/dlls/odbc32/proxyodbc.c
index 4823828067f..f80076ea161 100644
--- a/dlls/odbc32/proxyodbc.c
+++ b/dlls/odbc32/proxyodbc.c
@@ -46,6 +46,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(odbc);
 struct SQLHENV_data
 {
     int type;
+    SQLINTEGER pooling;
 };
 
 
@@ -76,6 +77,7 @@ SQLRETURN WINAPI SQLAllocEnv(SQLHENV *EnvironmentHandle)
         return SQL_ERROR;
 
     henv->type = SQL_HANDLE_ENV;
+    henv->pooling = SQL_CP_OFF;
 
     *EnvironmentHandle = henv;
 
@@ -568,12 +570,42 @@ SQLRETURN WINAPI SQLGetDiagRec(SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMAL
 SQLRETURN WINAPI SQLGetEnvAttr(SQLHENV EnvironmentHandle, SQLINTEGER Attribute, SQLPOINTER Value,
                                SQLINTEGER BufferLength, SQLINTEGER *StringLength)
 {
-    SQLRETURN ret = SQL_ERROR;
+    struct SQLHENV_data *data = EnvironmentHandle;
 
-    FIXME("(EnvironmentHandle %p, Attribute %d, Value %p, BufferLength %d, StringLength %p)\n",
+    TRACE("(EnvironmentHandle %p, Attribute %d, Value %p, BufferLength %d, StringLength %p)\n",
           EnvironmentHandle, Attribute, Value, BufferLength, StringLength);
 
-    return ret;
+    if (EnvironmentHandle == SQL_NULL_HENV)
+    {
+        if (StringLength)
+            *StringLength = 0;
+        if (Value)
+            *(SQLINTEGER*)Value = 0;
+        return SQL_SUCCESS;
+    }
+
+    if (data->type != SQL_HANDLE_ENV)
+    {
+        WARN("Wrong handle type %d\n", data->type);
+        return SQL_ERROR;
+    }
+
+    switch (Attribute)
+    {
+        case SQL_ATTR_CONNECTION_POOLING:
+            if (BufferLength != sizeof(data->pooling))
+            {
+                WARN("Invalid buffer size\n");
+                return SQL_ERROR;
+            }
+            *(SQLINTEGER*)Value = data->pooling;
+            break;
+        default:
+            FIXME("Unhandle attribute %d\n", Attribute);
+            return SQL_ERROR;
+    }
+
+    return SQL_SUCCESS;
 }
 
 /*************************************************************************
@@ -782,12 +814,31 @@ SQLRETURN WINAPI SQLSetDescRec(SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber,
 SQLRETURN WINAPI SQLSetEnvAttr(SQLHENV EnvironmentHandle, SQLINTEGER Attribute, SQLPOINTER Value,
                                SQLINTEGER StringLength)
 {
-    SQLRETURN ret = SQL_ERROR;
+    struct SQLHENV_data *data = EnvironmentHandle;
 
-    FIXME("(EnvironmentHandle %p, Attribute %d, Value %p, StringLength %d)\n", EnvironmentHandle, Attribute, Value,
+    TRACE("(EnvironmentHandle %p, Attribute %d, Value %p, StringLength %d)\n", EnvironmentHandle, Attribute, Value,
           StringLength);
 
-    return ret;
+    if(!data || data->type != SQL_HANDLE_ENV)
+    {
+        WARN("Wrong handle type %d\n", data->type);
+        return SQL_ERROR;
+    }
+
+    switch(Attribute)
+    {
+        case SQL_ATTR_CONNECTION_POOLING:
+            if (Value)
+                data->pooling = *(SQLINTEGER*)Value;
+            else
+                data->pooling = SQL_CP_OFF;
+            break;
+        default:
+            FIXME("Unhandle attribute %d\n", Attribute);
+            return SQL_ERROR;
+    }
+
+    return SQL_SUCCESS;
 }
 
 /*************************************************************************
-- 
2.39.1

